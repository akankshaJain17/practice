To Do
1. implement a function which takes a limit M, and prints all the prime numbers from 1 to M

Array:
1. Given an array with N elements containing only 0s and 1s, sort them in a way that all 0s are to the left and 1s are to the right. For example: given array of 5 elements: arr = [0, 1, 1, 0, 1, 0] => [0, 0, 0, 1, 1, 1]
 - Solve the above with runtime complexity of O(n) and O(1) memory space
2. Write a program to wrap/rotate (from left side to right side) an array by N elements. 
  - For example:
   - [1,2,3] => rotate LEFT by 1 element => [2, 3, 1] => rotate LEFT by 1 element => [3, 1, 2]
3. Given an array of N elements, print all the permutations possible (excluding duplicates) and return them. Describe the time complexity of your solution.
 - for example:
    - [1,2] => [[1,2] , [2,1] ]
    - [1,2,3] => [[1,2,3], [1,3,2], [2,3,1],  [2,1,3],  [3,1,2], [3,2,1]] 

String:
1. Given two strings - check if they are anagrams of each other ? Come up with atleast two approaches. 
 - One approach should be done in O(n) runtime complexity and constant O(c) memory.


DONE
- 
